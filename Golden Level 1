import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report

# Step 1: Load and preprocess data
def load_data():
    # Example data: Replace with real resume data
    data = {
        "text": [
            "I am a highly organized person with strong attention to detail.",
            "I enjoy working in teams and have excellent communication skills.",
            "I love solving complex problems and thrive under pressure.",
            "I am creative and always think outside the box.",
            "I am detail-oriented and have a high sense of responsibility."
        ],
        "personality_trait": ["Conscientiousness", "Agreeableness", "Extraversion", "Openness", "Conscientiousness"]
    }
    df = pd.DataFrame(data)
    return df

# Step 2: Text vectorization
def vectorize_text(data, column):
    vectorizer = TfidfVectorizer(max_features=100)
    features = vectorizer.fit_transform(data[column])
    return features, vectorizer

# Step 3: Train machine learning model
def train_model(X, y):
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
    model = LogisticRegression()
    model.fit(X_train, y_train)
    predictions = model.predict(X_test)
    print("Model Performance:\n")
    print(classification_report(y_test, predictions))
    return model

# Step 4: Predict personality trait
def predict_personality(text, vectorizer, model):
    text_vector = vectorizer.transform([text])
    prediction = model.predict(text_vector)
    return prediction[0]

# Main function
if __name__ == "__main__":
    # Load and prepare data
    resume_data = load_data()
    X, vectorizer = vectorize_text(resume_data, "text")
    y = resume_data["personality_trait"]

    # Train the model
    print("Training the model...")
    personality_model = train_model(X, y)

    # Test the system with a sample input
    print("\nPersonality Prediction System:")
    test_text = input("Enter a sample text from a resume: ")
    result = predict_personality(test_text, vectorizer, personality_model)
    print(f"Predicted Personality Trait: {result}")
